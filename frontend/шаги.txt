МАКЕТ https://www.figma.com/file/MA3mQEnyoNBVyfPWOz52l4/Task-Flow---Project-Management-Dashboard-UI-(Community)?type=design&node-id=2-54&t=S8Lpn16n7V7Epph7-0

*Чтобы не было глобальных css стилей мы используем module css.
ПРедставим, у нас есть два компонента ссылок - Link и LinkWithIcon.
У нас может возникеуть ситуация, что классы для этих компонентов будут одинковыми.
Тогла будет непонятно, какие стили для какого компонента использовать.
Поэтому, чтобы изолировать стили, мы используем module css (так же существуют другие решения, например, emotion css, styled css)

https://create-react-app.dev/docs/adding-a-css-modules-stylesheet/
Нужно создавать css файлы с именем [name].module.css



*Чтобы работало несколько страниц используем react-router-dom
https://reactrouter.com/en/main/start/tutorial#tutorial


Для frontend будем использовать react (функции для удобной работы с js) 
1. выполнить в терминале npx create-react-app
получилась структура проекта
	node_modules - файлы библиотек
	public - картинки
	src - твой код
	package.json - конфигурация npm (так же здесь находятся команды для запуска и отладки приложения) 

2. Для запуска проекта нужно написать в терминалет npm run start  и открыть в браузере localhost:3000

компоненты react - переиспользуемые части кода, это функции которые возвращают шаблон


* Чтобы создать список Тудушек из массива элементов используем функцию массива map.
 React требует, чтобы у каждого такого элемента созданного из массива был уникальный ключ key, его мы берем из индекса массива
            {props.todos.map((todo, index) => (
                <TodoItem todo={todo} key={index}></TodoItem>
            ))} 

***ХУКИ РЕАКТА***
Хуки позволяют использовать различные функции React из ваших компонентов
Мы будем использовать useState и useEffect

*Хук состояния useState
 Состояние позволяет компоненту «запоминать» такую ​​информацию, как список todo. 
 const [todos, setTodos] = useState([])
в итоге переменной todos оказывается состояние, которое можно изменять функцией setTodos. Если изменить состояние todos вот так:
todos = newTodos, то реакт не заметит это изменение состояния и пользовательский интерфейс не обновится. Поэтому мы должны изменять состояние через
функцию setTodos.

*Хук эффекта useEffect
Когда меняется какое-либо состояние иногда нам необходимо выполнить дополнительный код. Допустим при переносе todo в другой столбик нам необходимо
сделать запрос на сервер. В этом случае идеально подходит хук useEffect, он принимает 2 параметра, 1 - функция, которую необходимо вызвать,
 2 параметр - массив зависимостей. При изменении любого элемента из массива зависимостей вызовется функция переданная первым аргументом.
 Так же если указать пустой массив зависимостей, то этот код вызовется 1 раз при создании компонента.

 пример useState и useEffect для получения данных с сервера
**
     const [todos, setTodos] = useState([])

    useEffect(() => {
        fetch('http://127.0.0.1:5000/todos')
            .then(r => r.json())
            .then(r => setTodos(r))
    }, [])

	return <div className={style.wrapper}>
        <TodosTable todos={todos}></TodosTable>
    </div>
**


У нас запрос на получение списка todo делается в компоненте TodoPage.
Он передает список todo компоненту TodosTable, в котором есть 3 основных блока: добавление todo;
 состояния todo (open, in progress, done); и сами todo
В компоненте AddTodo мы добавляем Todo, но проблема в том, что состояние лежит в родительском элементе. Т.е. получается,
что мы из дочернего элемента AddTodo должны как-то изменить состояние TodoPage. Для этого мы в компоненте TodoPage создадим функцию addTodo
и передадим её как props. В дальнейшем мы можем вызывать эту функцию из дочернего элемента AddTodo.

** DRAG AND DROP https://react-dnd.github.io/react-dnd/examples/sortable/simple


БЕКЕНД
Используем flask https://www.youtube.com/watch?v=w8O6apM3aBw
запуск бекенда python app.py

При GET запросе http://127.0.0.1:5000/todos возникла CORS ошибка, чтобы убрать нужно установить Flask-CORS
по инструкции https://flask-cors.readthedocs.io/en/latest/

!!Для разграничения логики по отдельным файлам используем flask bluePrint
https://www.youtube.com/watch?v=DYxcKIBEISE&list=PLWQhUNXl0LnjBIaE72hq1RkDsbWWSgeUr&index=11